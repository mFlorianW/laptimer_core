# SPDX-FileCopyrightText: 2024 Florian We√üel <florianwessel@gmx.net>
#
# SPDX-License-Identifier: GPL-2.0-or-later
name: Pullrequest Build And Test

on:
  workflow_call:

jobs:
  Generate_Build_Jobs:
    runs-on: ubuntu-latest
    outputs:
      commits: ${{ steps.commits.outputs.commits_json }}
    steps:
      - name: Install jq
        run: sudo apt-get install jq
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create Commits list
        id: commits
        run: |
          commits=($(git rev-list --reverse origin/${{ github.base_ref }}..origin/${{ github.head_ref }}))
          commits=$(jq -n -c '$ARGS.positional' --args "${commits[@]}")
          echo "${commits[@]}"
          echo "commits_json=${commits[@]}" >> "$GITHUB_OUTPUT"

  Build:
    runs-on: ubuntu-latest
    needs: [Generate_Build_Jobs]
    strategy:
      fail-fast: false
      matrix:
        commits: ${{ fromJson(needs.Generate_Build_Jobs.outputs.commits) }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
          fetch-depth: 0
    - name: Install Qt
      uses: ./.github/actions/linux-install-qt
    - name: Install Dependencies
      uses: ./.github/actions/linux-install-dep
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
    - name: Build
      run: |
        echo "###############################################################"
        echo "# Start Build Commit ${{ matrix.commits }}"
        echo "###############################################################"
        git checkout ${{ matrix.commits }}
        cmake --preset github-ci-debug -DENABLE_WARNING_AS_ERROR=ON
        cmake --build --preset github-ci-debug -- -j
        echo "###############################################################"
        echo "# Finished Build Commit ${{ matrix.commits }}"
        echo "###############################################################"
    - name: Test
      id: tests
      run: |
        echo "###############################################################"
        echo "# Start Tests Commit ${{ matrix.commits }}"
        echo "###############################################################"
        ctest --preset github-ci-test --output-on-failure --output-junit test_results.xml
        echo "###############################################################"
        echo "# Finished Tests Commit ${{ matrix.commits }}"
        echo "###############################################################"
      env:
        QT_QPA_PLATFORM: offscreen
    - name: Publish Test Results
      uses: actions/upload-artifact@v3
      if: success() || failure()
      with:
        name: test-results@${{ matrix.commits }}.xml
        path: build-github-ci-debug/test_results.xml

